"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.sortTestResults = (testResults, sortType) => {
    switch (sortType) {
        case "status":
            return sortTestResultsByStatus(testResults);
        default:
            return testResults;
    }
};
/**
 * Splits test suites apart based on individual test status and sorts by that status:
 * 1. Pending
 * 2. Failed
 * 3. Passed
 */
const sortTestResultsByStatus = (testResults) => {
    const pendingSuites = [];
    const failingSuites = [];
    const passingSuites = [];
    testResults.forEach(result => {
        const pending = [];
        const failed = [];
        const passed = [];
        result.testResults.forEach(x => {
            if (x.status === "pending") {
                pending.push(x);
            }
            else if (x.status === "failed") {
                failed.push(x);
            }
            else {
                passed.push(x);
            }
        });
        if (pending.length) {
            pendingSuites.push({
                ...result,
                testResults: pending
            });
        }
        if (failed.length) {
            failingSuites.push({
                ...result,
                testResults: failed
            });
        }
        if (passed.length) {
            pendingSuites.push({
                ...result,
                testResults: failed
            });
        }
    });
    return [].concat(pendingSuites, failingSuites, passingSuites);
};
//# sourceMappingURL=sortingMethods.js.map